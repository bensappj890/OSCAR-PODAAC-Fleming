---
title: "SSS - Data Pull"
author: "Benjamin Sapperstein"
date: "2024-07-25"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
# load packages
library(BiocManager)
BiocManager::install("rhdf5")
```

```{r}
s3_cred <- list(
    aws_region = "eu-central-1",
    access_key_id = "bensap",
    secret_access_key = "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
    )

public_S3_url <- "https://rhdf5-private.s3.eu-central-1.amazonaws.com/h5ex_t_array.h5"
  h5ls(file = public_S3_url,
       s3 = TRUE, 
       s3credentials = s3_cred)
```

```{r}
# Open H5 file
FileSSS <- ("/cloud/project/SSS_data.h5")
obs <- h5Open(FileSSS, "obs", mode = "r")
```

```{r}
# get metadata
metadataSSS = FileSSS$ls()
metadataSSS
```

```{r}
# extract data
latSSH = ncvar_get(ncSSH, "data_01/latitude")
lonSSH = ncvar_get(ncSSH, "data_01/longitude")
```

```{r}
# get time
timeSSH <- ncvar_get(ncSSH,"data_01/time_tai")
tunitsSSH <- ncatt_get(ncSSH,"data_01/time_tai","units")
ntSSH <- dim(timeSSH)
```

```{r}
# change time units
# decode time
cfSSH <- CFtime(tunitsSSH$value, calendar = "proleptic_gregorian", timeSSH) # convert time to CFtime class

timestampsSSH <-as_timestamp(cfSSH) # get character-string times

time_cfSSH <- CFparse(cfSSH, timestampsSSH) # parse the string into date components

new_timeSSH <- subset(time_cfSSH, select = -c(tz, offset))
```

```{r}
# create dataframe and add names
df01 <- data.frame(cbind(new_timeSSH,lonlatSSH,SSH.vec,Temp.vec,Depth.vec,Dis.vec))
names(df01) <- c("year","month","day","hour","minute","sec","lon","lat","SSH","SST","Depth","Distance")
head(na.omit(df01), 10)
```

```{r}
# create excel from data frame
library(xlsx)
library(writexl)
write_xlsx(
  df01, 
  path = "SST&SSH.xlsx", 
  col_names = TRUE,
  format_headers = TRUE,
  use_zip64 = FALSE)
```
